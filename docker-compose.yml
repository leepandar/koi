version: '3.5'
services:
  koi-mysql:
    build:
      context: doc/db
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: root
    restart: always
    container_name: koi-mysql
    image: koi-mysql
    command: --lower_case_table_names=1
    ports:
      - 3306:3306
    volumes:
      - ./home/koi-mysql/data:/var/lib/mysql
      - ./home/koi-mysql/file:/var/lib/mysql-files
      - ./home/koi-mysql/file:/etc/mysql/my.cnfdocker
    networks:
      - koi

  koi-redis:
    container_name: koi-redis
    image: registry.cn-hangzhou.aliyuncs.com/dockerhub_mirror/redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ./home/koi-redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
      - ./home/koi-redis/log/redis.log:/var/log/redis.log
      - ./home/koi-redis/data:/data
    networks:
      - koi

  koi-nacos:
    build:
      context: ./koi-nacos
    restart: always
    container_name: koi-nacos
    image: koi-nacos
    ports:
      - 8848:8848
    networks:
      - koi

  koi-gateway:
    build:
      context: ./koi-gateway
    restart: always
    container_name: koi-gateway
    image: koi-gateway
    ports:
      - 8888:8888
    volumes:
      - ./home/iot-gateway/logs/:/koi-gateway/logs/koi-gateway/
    networks:
      - koi

  koi-iam:
    build:
      context: ./koi-modules/koi-iam
    restart: always
    container_name: koi-iam
    image: koi-iam
    ports:
      - 8001:8001
    volumes:
      - ./home/iot-iam/logs/:/koi-iam/logs/koi-iam/
    networks:
      - koi

  koi-suite:
    build:
      context: ./koi-modules/koi-suite
    restart: always
    container_name: koi-suite
    image: koi-suite
    ports:
      - 8002:8002
    volumes:
      - ./home/iot-suite/logs/:/koi-suite/logs/koi-suite/
    networks:
      - koi

  koi-bpm:
    build:
      context: ./koi-modules/koi-bpm
    restart: always
    container_name: koi-bpm
    image: koi-bpm
    ports:
      - 8003:8003
    volumes:
      - ./home/iot-bpm/logs/:/koi-bpm/logs/koi-bpm/
    networks:
      - koi

  koi-monitor:
    build:
      context: ./koi-visual/koi-monitor
    restart: always
    image: koi-monitor
    container_name: koi-monitor
    ports:
      - 7001:7001
    networks:
      - koi

  koi-job-server:
    build:
      context: ./koi-visual/koi-job-server
    restart: always
    image: koi-job-server
    container_name: koi-job-server
    ports:
      - 7002:7002
    volumes:
      - ./home/iot-job-server/logs/:/koi-job-server/logs/koi-job-server/
    networks:
      - koi

  koi-job-client:
    build:
      context: ./koi-visual/koi-job-client
    restart: always
    image: koi-job-client
    container_name: koi-job-client
    ports:
      - 7003:7003
    volumes:
      - ./home/iot-job-client/logs/:/koi-job-client/logs/koi-job-client/
    networks:
      - koi

  koi-rabbitmq:
    image: docker.io/macintoshplus/rabbitmq-management
    container_name: koi-rabbitmq
    restart: always
    ports:
      - 5671:5671
      - 5672:5672
      - 15672:15672
      - 25672:25672
    volumes:
      - ./home/koi-rabbitmq/data:/var/lib/rabbitmq
      - ./home/koi-rabbitmq/conf:/etc/rabbitmq
      - ./home/koi-rabbitmq/log:/var/log/rabbitmq
    networks:
      - koi

  koi-prometheus:
    image: prom/prometheus:v2.40.1
    container_name: koi-prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./home/koi-prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - koi

  koi-grafana:
    image: grafana/grafana:9.2.4
    container_name: koi-grafana
    restart: always
    environment:
      TZ: Asia/Shanghai
      # 服务地址 用于指定外网ip或域名
      GF_SERVER_ROOT_URL: ""
      # admin 管理员密码
      GF_SECURITY_ADMIN_PASSWORD: 123456
    ports:
      - 3000:3000
    volumes:
      - ./home/koi-grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./home/koi-grafana:/var/lib/grafana
    networks:
      - koi

  koi-kafka:
    image: bitnami/kafka:3.6.2
    container_name: koi-kafka
    restart: always
    ports:
      - 9092:9092
    environment:
      TZ: Asia/Shanghai
      # 更多变量 查看文档 https://github.com/bitnami/bitnami-docker-kafka/blob/master/README.md
      KAFKA_BROKER_ID: 1
      # 监听端口
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      # 实际访问ip 本地用 127 内网用 192 外网用 外网ip
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://192.168.31.165:9092
      KAFKA_CFG_ZOOKEEPER_CONNECT: 127.0.0.1:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - ./home/koi-kafka/data:/bitnami/kafka/data
    depends_on:
      - zookeeper
    networks:
      - koi

  koi-kafka-manager:
    image: sheepkiller/kafka-manager:latest
    container_name: koi-kafka-manager
    restart: always
    ports:
      - 19092:19092
    environment:
      ZK_HOSTS: 127.0.0.1:2181
      APPLICATION_SECRET: letmein
      KAFKA_MANAGER_USERNAME: root
      KAFKA_MANAGER_PASSWORD: 123456
      KM_ARGS: -Dhttp.port=19092
    depends_on:
      - koi-kafka
    networks:
      - koi

  koi-zookeeper:
    image: 'bitnami/zookeeper:3.8.0'
    container_name: koi-zookeeper
    restart: always
    ports:
      - 2181:2181
    environment:
      TZ: Asia/Shanghai
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_SERVER_ID: 1
      ZOO_PORT_NUMBER: 2181
      # 自带的控制台 一般用不上可自行开启
      ZOO_ENABLE_ADMIN_SERVER: "no"
      # 自带控制台的端口
      ZOO_ADMIN_SERVER_PORT_NUMBER: 8080
    networks:
      - koi

  koi-elasticsearch:
    image: elasticsearch:7.17.6
    container_name: koi-elasticsearch
    restart: always
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      # 设置集群名称
      cluster.name: koi-elasticsearch
      # 以单一节点模式启动
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - ./home/koi-elk/elasticsearch/plugins:/usr/share/elasticsearch/plugins
      - ./home/koi-elk/elasticsearch/data:/usr/share/elasticsearch/data
      - ./home/koi-elk/elasticsearch/logs:/usr/share/elasticsearch/logs
    networks:
      - koi

  koi-kibana:
    image: kibana:7.17.6
    container_name: koi-kibana
    restart: always
    ports:
      - 5601:5601
    depends_on:
      # kibana在elasticsearch启动之后再启动
      - koi-elasticsearch
    environment:
      #设置系统语言文中文
      I18N_LOCALE: zh-CN
      # 访问域名
      # SERVER_PUBLICBASEURL: https://kibana.cloud.com
    volumes:
      - ./home/koi-elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - koi

  koi-logstash:
    image: logstash:7.17.6
    container_name: koi-logstash
    restart: always
    ports:
      - 4560:4560
    volumes:
      - ./home/koi-elk/logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./home/koi-elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
    depends_on:
      - koi-elasticsearch
    networks:
      - koi

  koi-minio:
    image: minio/minio
    container_name: koi-minio
    restart: always
    command:
      - server /data
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123456
      MINIO_DOMAIN: koi-minio
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./home/koi-minio/data:/data
    networks:
      - koi

networks:
  spring_cloud_default:
    name: koi
    driver: bridge
